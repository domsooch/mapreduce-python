# Copyright 2014 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

application: zettaneerpdq
version: genomicsmr1
runtime: python27
api_version: 1
threadsafe: no

handlers:
# Load the favicon from the usual place.
- url: /favicon.ico
  static_files: static/images/favicon.ico
  upload: static/images/favicon.ico

- url: /mapreduce/pipeline/images
  static_dir: mapreduce/lib/pipeline/ui/images

# Static files
- url: /static
  static_dir: static
  # Make them application readable so we can read the sample data.
  application_readable: true

- url: /mapreduce(/.*)?
  script: mapreduce.main.APP
  login: admin

- url: .*
  script: main.app
  login: required

env_variables:
  # Note: If you are running on a local dev app server (dev_appserver.py) you
  # will need to generate an OAuth Service Account and download the
  # private-key.p12 file. That will need to be converted to a private-key.pem
  # file as follows:
  #   cat privatekey.p12 | openssl pkcs12 -nodes -nocerts \
  #     -passin pass:notasecret | openssl rsa > private-key.pem
  # Then using the email address associated with this Service Account run the
  # dev app server as follows:
  #   dev_appserver.py --appidentity_private_key_path private-key.pem \
  #     --appidentity_email_address XXX@developer.gserviceaccount.com
  # Otherwise you may get Error Code: 401 Message: Invalid Credentials when
  # calling the Genomics API.

  # This is found in the new developer console in the APIs & Auth -> Credentials
  # page. Look at the Public API access section in the bottom right and copy the
  # API Key here.
  # It may no longer be required so you can leave it blank and try it, but if
  # you get authentication errors or invalid grant errors you may want to
  # provide it.
  API_KEY: ''

  # The bucket in Google Cloud Storage for which to write intermediate files as
  # well as final output files.
  # If you have a default bucket enabled then you can omit the setting of this
  # variable. Otherwise the bucket needs to be specified.
  # See this URL for information on activating GCS and using the
  # default bucket:
  #     https://developers.google.com/appengine/docs/python/
  #         googlecloudstorageclient/activate
  #BUCKET: 'bucket_name_goes_here'

  # Optional: The directory where the final output files will be copied to.
  # You don't need to include the bucket, it will be pre-pended automatically.
  # Example values could be "genomics" or "genomics/output".
  # If not specified then a default of "genomics_mr_results" will be used.
  #OUTPUT_DIRECTORY: 'genomics'

  # Required: The number of shards to use in the map reduce. Currently for large
  # map reduce processes the suggested value is 200
  MAPREDUCE_SHARDS: 200

libraries:
- name: webapp2
  version: "2.5.1"
- name: jinja2
  version: "2.6"
